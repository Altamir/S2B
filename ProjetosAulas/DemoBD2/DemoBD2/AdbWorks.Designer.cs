//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AdbWorksDataModel", "FK_CountryRegionCurrency_Currency_CurrencyCode", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DemoBD2.Currency), "CountryRegionCurrency", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DemoBD2.CountryRegionCurrency), true)]
[assembly: EdmRelationshipAttribute("AdbWorksDataModel", "FK_CurrencyRate_Currency_FromCurrencyCode", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DemoBD2.Currency), "CurrencyRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DemoBD2.CurrencyRate), true)]
[assembly: EdmRelationshipAttribute("AdbWorksDataModel", "FK_CurrencyRate_Currency_ToCurrencyCode", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DemoBD2.Currency), "CurrencyRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DemoBD2.CurrencyRate), true)]

#endregion

namespace DemoBD2
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AdventureWorks2008_DataEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AdventureWorks2008_DataEntities object using the connection string found in the 'AdventureWorks2008_DataEntities' section of the application configuration file.
        /// </summary>
        public AdventureWorks2008_DataEntities() : base("name=AdventureWorks2008_DataEntities", "AdventureWorks2008_DataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AdventureWorks2008_DataEntities object.
        /// </summary>
        public AdventureWorks2008_DataEntities(string connectionString) : base(connectionString, "AdventureWorks2008_DataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AdventureWorks2008_DataEntities object.
        /// </summary>
        public AdventureWorks2008_DataEntities(EntityConnection connection) : base(connection, "AdventureWorks2008_DataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CountryRegionCurrency> CountryRegionCurrencies
        {
            get
            {
                if ((_CountryRegionCurrencies == null))
                {
                    _CountryRegionCurrencies = base.CreateObjectSet<CountryRegionCurrency>("CountryRegionCurrencies");
                }
                return _CountryRegionCurrencies;
            }
        }
        private ObjectSet<CountryRegionCurrency> _CountryRegionCurrencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CurrencyRate> CurrencyRates
        {
            get
            {
                if ((_CurrencyRates == null))
                {
                    _CurrencyRates = base.CreateObjectSet<CurrencyRate>("CurrencyRates");
                }
                return _CurrencyRates;
            }
        }
        private ObjectSet<CurrencyRate> _CurrencyRates;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CountryRegionCurrencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountryRegionCurrencies(CountryRegionCurrency countryRegionCurrency)
        {
            base.AddObject("CountryRegionCurrencies", countryRegionCurrency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CurrencyRates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencyRates(CurrencyRate currencyRate)
        {
            base.AddObject("CurrencyRates", currencyRate);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdbWorksDataModel", Name="CountryRegionCurrency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CountryRegionCurrency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CountryRegionCurrency object.
        /// </summary>
        /// <param name="countryRegionCode">Initial value of the CountryRegionCode property.</param>
        /// <param name="currencyCode">Initial value of the CurrencyCode property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static CountryRegionCurrency CreateCountryRegionCurrency(global::System.String countryRegionCode, global::System.String currencyCode, global::System.DateTime modifiedDate)
        {
            CountryRegionCurrency countryRegionCurrency = new CountryRegionCurrency();
            countryRegionCurrency.CountryRegionCode = countryRegionCode;
            countryRegionCurrency.CurrencyCode = currencyCode;
            countryRegionCurrency.ModifiedDate = modifiedDate;
            return countryRegionCurrency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryRegionCode
        {
            get
            {
                return _CountryRegionCode;
            }
            set
            {
                if (_CountryRegionCode != value)
                {
                    OnCountryRegionCodeChanging(value);
                    ReportPropertyChanging("CountryRegionCode");
                    _CountryRegionCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CountryRegionCode");
                    OnCountryRegionCodeChanged();
                }
            }
        }
        private global::System.String _CountryRegionCode;
        partial void OnCountryRegionCodeChanging(global::System.String value);
        partial void OnCountryRegionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyCode
        {
            get
            {
                return _CurrencyCode;
            }
            set
            {
                if (_CurrencyCode != value)
                {
                    OnCurrencyCodeChanging(value);
                    ReportPropertyChanging("CurrencyCode");
                    _CurrencyCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CurrencyCode");
                    OnCurrencyCodeChanged();
                }
            }
        }
        private global::System.String _CurrencyCode;
        partial void OnCurrencyCodeChanging(global::System.String value);
        partial void OnCurrencyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdbWorksDataModel", "FK_CountryRegionCurrency_Currency_CurrencyCode", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("AdbWorksDataModel.FK_CountryRegionCurrency_Currency_CurrencyCode", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("AdbWorksDataModel.FK_CountryRegionCurrency_Currency_CurrencyCode", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("AdbWorksDataModel.FK_CountryRegionCurrency_Currency_CurrencyCode", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("AdbWorksDataModel.FK_CountryRegionCurrency_Currency_CurrencyCode", "Currency", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdbWorksDataModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="currencyCode">Initial value of the CurrencyCode property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static Currency CreateCurrency(global::System.String currencyCode, global::System.String name, global::System.DateTime modifiedDate)
        {
            Currency currency = new Currency();
            currency.CurrencyCode = currencyCode;
            currency.Name = name;
            currency.ModifiedDate = modifiedDate;
            return currency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrencyCode
        {
            get
            {
                return _CurrencyCode;
            }
            set
            {
                if (_CurrencyCode != value)
                {
                    OnCurrencyCodeChanging(value);
                    ReportPropertyChanging("CurrencyCode");
                    _CurrencyCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CurrencyCode");
                    OnCurrencyCodeChanged();
                }
            }
        }
        private global::System.String _CurrencyCode;
        partial void OnCurrencyCodeChanging(global::System.String value);
        partial void OnCurrencyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdbWorksDataModel", "FK_CountryRegionCurrency_Currency_CurrencyCode", "CountryRegionCurrency")]
        public EntityCollection<CountryRegionCurrency> CountryRegionCurrencies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CountryRegionCurrency>("AdbWorksDataModel.FK_CountryRegionCurrency_Currency_CurrencyCode", "CountryRegionCurrency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CountryRegionCurrency>("AdbWorksDataModel.FK_CountryRegionCurrency_Currency_CurrencyCode", "CountryRegionCurrency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdbWorksDataModel", "FK_CurrencyRate_Currency_FromCurrencyCode", "CurrencyRate")]
        public EntityCollection<CurrencyRate> FromCurrencyRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CurrencyRate>("AdbWorksDataModel.FK_CurrencyRate_Currency_FromCurrencyCode", "CurrencyRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CurrencyRate>("AdbWorksDataModel.FK_CurrencyRate_Currency_FromCurrencyCode", "CurrencyRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdbWorksDataModel", "FK_CurrencyRate_Currency_ToCurrencyCode", "CurrencyRate")]
        public EntityCollection<CurrencyRate> ToCurrencyRates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CurrencyRate>("AdbWorksDataModel.FK_CurrencyRate_Currency_ToCurrencyCode", "CurrencyRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CurrencyRate>("AdbWorksDataModel.FK_CurrencyRate_Currency_ToCurrencyCode", "CurrencyRate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AdbWorksDataModel", Name="CurrencyRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CurrencyRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CurrencyRate object.
        /// </summary>
        /// <param name="currencyRateID">Initial value of the CurrencyRateID property.</param>
        /// <param name="currencyRateDate">Initial value of the CurrencyRateDate property.</param>
        /// <param name="fromCurrencyCode">Initial value of the FromCurrencyCode property.</param>
        /// <param name="toCurrencyCode">Initial value of the ToCurrencyCode property.</param>
        /// <param name="averageRate">Initial value of the AverageRate property.</param>
        /// <param name="endOfDayRate">Initial value of the EndOfDayRate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static CurrencyRate CreateCurrencyRate(global::System.Int32 currencyRateID, global::System.DateTime currencyRateDate, global::System.String fromCurrencyCode, global::System.String toCurrencyCode, global::System.Decimal averageRate, global::System.Decimal endOfDayRate, global::System.DateTime modifiedDate)
        {
            CurrencyRate currencyRate = new CurrencyRate();
            currencyRate.CurrencyRateID = currencyRateID;
            currencyRate.CurrencyRateDate = currencyRateDate;
            currencyRate.FromCurrencyCode = fromCurrencyCode;
            currencyRate.ToCurrencyCode = toCurrencyCode;
            currencyRate.AverageRate = averageRate;
            currencyRate.EndOfDayRate = endOfDayRate;
            currencyRate.ModifiedDate = modifiedDate;
            return currencyRate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyRateID
        {
            get
            {
                return _CurrencyRateID;
            }
            set
            {
                if (_CurrencyRateID != value)
                {
                    OnCurrencyRateIDChanging(value);
                    ReportPropertyChanging("CurrencyRateID");
                    _CurrencyRateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CurrencyRateID");
                    OnCurrencyRateIDChanged();
                }
            }
        }
        private global::System.Int32 _CurrencyRateID;
        partial void OnCurrencyRateIDChanging(global::System.Int32 value);
        partial void OnCurrencyRateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CurrencyRateDate
        {
            get
            {
                return _CurrencyRateDate;
            }
            set
            {
                OnCurrencyRateDateChanging(value);
                ReportPropertyChanging("CurrencyRateDate");
                _CurrencyRateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyRateDate");
                OnCurrencyRateDateChanged();
            }
        }
        private global::System.DateTime _CurrencyRateDate;
        partial void OnCurrencyRateDateChanging(global::System.DateTime value);
        partial void OnCurrencyRateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FromCurrencyCode
        {
            get
            {
                return _FromCurrencyCode;
            }
            set
            {
                OnFromCurrencyCodeChanging(value);
                ReportPropertyChanging("FromCurrencyCode");
                _FromCurrencyCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FromCurrencyCode");
                OnFromCurrencyCodeChanged();
            }
        }
        private global::System.String _FromCurrencyCode;
        partial void OnFromCurrencyCodeChanging(global::System.String value);
        partial void OnFromCurrencyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ToCurrencyCode
        {
            get
            {
                return _ToCurrencyCode;
            }
            set
            {
                OnToCurrencyCodeChanging(value);
                ReportPropertyChanging("ToCurrencyCode");
                _ToCurrencyCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ToCurrencyCode");
                OnToCurrencyCodeChanged();
            }
        }
        private global::System.String _ToCurrencyCode;
        partial void OnToCurrencyCodeChanging(global::System.String value);
        partial void OnToCurrencyCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AverageRate
        {
            get
            {
                return _AverageRate;
            }
            set
            {
                OnAverageRateChanging(value);
                ReportPropertyChanging("AverageRate");
                _AverageRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AverageRate");
                OnAverageRateChanged();
            }
        }
        private global::System.Decimal _AverageRate;
        partial void OnAverageRateChanging(global::System.Decimal value);
        partial void OnAverageRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EndOfDayRate
        {
            get
            {
                return _EndOfDayRate;
            }
            set
            {
                OnEndOfDayRateChanging(value);
                ReportPropertyChanging("EndOfDayRate");
                _EndOfDayRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndOfDayRate");
                OnEndOfDayRateChanged();
            }
        }
        private global::System.Decimal _EndOfDayRate;
        partial void OnEndOfDayRateChanging(global::System.Decimal value);
        partial void OnEndOfDayRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdbWorksDataModel", "FK_CurrencyRate_Currency_FromCurrencyCode", "Currency")]
        public Currency FromCurrency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("AdbWorksDataModel.FK_CurrencyRate_Currency_FromCurrencyCode", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("AdbWorksDataModel.FK_CurrencyRate_Currency_FromCurrencyCode", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> FromCurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("AdbWorksDataModel.FK_CurrencyRate_Currency_FromCurrencyCode", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("AdbWorksDataModel.FK_CurrencyRate_Currency_FromCurrencyCode", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AdbWorksDataModel", "FK_CurrencyRate_Currency_ToCurrencyCode", "Currency")]
        public Currency ToCurrency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("AdbWorksDataModel.FK_CurrencyRate_Currency_ToCurrencyCode", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("AdbWorksDataModel.FK_CurrencyRate_Currency_ToCurrencyCode", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> ToCurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("AdbWorksDataModel.FK_CurrencyRate_Currency_ToCurrencyCode", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("AdbWorksDataModel.FK_CurrencyRate_Currency_ToCurrencyCode", "Currency", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
